apply plugin: 'com.vanniktech.maven.publish'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.diffplug.gradle.spotless'

sourceSets {
  main.resources {
    srcDirs += [
            'web/tabs/app/lib'
    ]
    srcDirs += [
            'web/static/'
    ]
    exclude '**/node_modules'
  }
}

dependencies {
  implementation dep.guava
  implementation dep.guice
  implementation dep.guiceMultibindings
  implementation dep.jacksonDatabind
  implementation dep.jacksonDataformatYaml
  implementation dep.jacksonJsr310
  implementation dep.jacksonKotlin
  implementation dep.jCommander
  implementation dep.jettyServer
  implementation dep.jettyServlet
  implementation dep.jettyWebsocketServlet
  implementation dep.jettyWebsocketServer
  implementation dep.kotlinStdLib
  implementation dep.kotlinReflection
  implementation dep.kotlinxCoroutines
  implementation dep.loggingApi
  implementation dep.metricsCore
  implementation dep.metricsParent
  implementation dep.misk
  implementation dep.miskHibernate
  implementation dep.miskSlack
  implementation dep.miskZipkin
  implementation dep.moshiCore
  implementation dep.moshiKotlin
  implementation dep.okHttp
  implementation dep.okio
  implementation dep.openTracing
  implementation dep.openTracingOkHttp
  implementation dep.retrofit
  implementation dep.retrofitGuavaAdapter
  implementation dep.tracingJaeger
  implementation dep.wireRuntime
  implementation dep.wireCompiler
  implementation dep.wireSchema

  implementation project(':client')

  testImplementation dep.miskTesting
  testImplementation dep.miskHibernateTesting
  testImplementation dep.junitApi
  testImplementation dep.junitParams
  testImplementation dep.junitEngine
  testImplementation dep.kotlinxCoroutinesTest
  testImplementation dep.assertj
  testImplementation dep.openTracingMock
}

jar {
  manifest {
    attributes 'Main-Class': 'app.cash.backfila.service.BackfilaServiceKt'
  }
  zip64 = true
}

shadowJar {
  exclude('module-info.class') // https://github.com/johnrengelman/shadow/issues/352
  mergeServiceFiles()
  zip64 true
  classifier = null
}

if (rootProject.file("hooks.gradle").exists()) {
  apply from: rootProject.file("hooks.gradle")
}